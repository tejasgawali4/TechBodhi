package cj46.tejas.com.techbodhi;

import android.app.DatePickerDialog;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Patterns;
import android.view.View;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import android.widget.Toast;

import com.basgeekball.awesomevalidation.AwesomeValidation;
import com.basgeekball.awesomevalidation.ValidationStyle;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.Calendar;
import java.util.HashMap;

import cj46.tejas.com.techbodhi.Utility.Config;

/**
 * Created by Carl_johnson on 12/7/2016.
 */

    public class RegisterUser extends AppCompatActivity implements View.OnClickListener {

    private EditText firstname, lastname, Date, email, password, address, username, mobile ;
    private ImageButton dob;
    private TextView error;
    private RadioButton rMale ,rFemale;
    private RadioGroup RadioGenGroup;
    private Button btnRegister;
    private int mYear, mMonth, mDay;
    private String gender;

    private AwesomeValidation awesomeValidation;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.registeruser);

        firstname = (EditText) findViewById(R.id.firstname);
        lastname = (EditText) findViewById(R.id.lastname);
        email = (EditText) findViewById(R.id.email);
        username = (EditText) findViewById(R.id.username);
        password = (EditText) findViewById(R.id.Password);
        address = (EditText) findViewById(R.id.address);

        mobile = (EditText) findViewById(R.id.mobile);
        Date = (EditText) findViewById(R.id.dob);
        error = (TextView) findViewById(R.id.register_error);

        rMale = (RadioButton) findViewById(R.id.radioMale);
        rFemale = (RadioButton) findViewById(R.id.radioFemale);

        dob = (ImageButton) findViewById(R.id.dateofbirth);
        btnRegister = (Button) findViewById(R.id.btnRegister);

        awesomeValidation = new AwesomeValidation(ValidationStyle.BASIC);

        awesomeValidation.addValidation(this, R.id.firstname, "^[A-Za-z\\s]{1,}[\\.]{0,1}[A-Za-z\\s]{0,}$", R.string.Vfirstname);
        awesomeValidation.addValidation(this, R.id.lastname, "^[A-Za-z\\s]{1,}[\\.]{0,1}[A-Za-z\\s]{0,}$", R.string.Vlastname);
        awesomeValidation.addValidation(this, R.id.email, Patterns.EMAIL_ADDRESS, R.string.Vemail);
        //awesomeValidation.addValidation(this, R.id.gender, "^[A-Za-z\\s]{1,}[\\.]{0,1}[A-Za-z\\s]{0,}$", R.string.Vgender);
        awesomeValidation.addValidation(this, R.id.username, "^[a-z0-9_-]{3,15}$", R.string.Vusername);
        awesomeValidation.addValidation(this, R.id.Password, "^[A-Za-z\\s]{1,}[\\.]{0,1}[A-Za-z\\s]{0,}$", R.string.VPassword);
        /*awesomeValidation.addValidation(this, R.id.address, "^[A-Za-z\\s]{1,}[\\.]{0,1}[A-Za-z\\s]{0,}$", R.string.Vaddress);*/
        awesomeValidation.addValidation(this, R.id.mobile, "^[2-9]{2}[0-9]{8}$", R.string.Vmobile);
       // awesomeValidation.addValidation(this, R.id.dob, "^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$", R.string.Vdob);


        btnRegister.setOnClickListener(this);
        dob.setOnClickListener(this);

        rMale.setOnClickListener(this);
        rFemale.setOnClickListener(this);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
    }

    @Override
    public void onBackPressed() {
        super.onBackPressed();
        Intent i = new Intent(RegisterUser.this,LoginActivity.class);
        startActivity(i);
    }

    @Override
    protected void onRestart() {
        super.onRestart();
    }

    @Override
    protected void onPause() {
        super.onPause();
    }


    @Override
    public void onClick(View v)
    {
        if (v == btnRegister)
        {
            if (awesomeValidation.validate())
            {
                if (gender==null)
                {
                    System.out.println("gender if " + gender);
                    Toast.makeText(getApplicationContext(),"Please select gender..",Toast.LENGTH_SHORT).show();
                    onRestart();
                }
                else
                {
                    System.out.println("gender else " + gender);
                    registerUser();
                }


                //Toast.makeText(this, "Validation Successfull", Toast.LENGTH_LONG).show();
                //process the data further0.2

            }

        }
        if (v == dob)
        {

                // Get Current Date
                final Calendar c = Calendar.getInstance();
                mYear = c.get(Calendar.YEAR);
                mMonth = c.get(Calendar.MONTH);
                mDay = c.get(Calendar.DAY_OF_MONTH);


                DatePickerDialog datePickerDialog = new DatePickerDialog(this,
                        new DatePickerDialog.OnDateSetListener() {

                            @Override
                            public void onDateSet(DatePicker view, int year,
                                                  int monthOfYear, int dayOfMonth) {

                                Date.setText(dayOfMonth + "-" + (monthOfYear + 1) + "-" + year);

                            }
                        }, mYear, mMonth, mDay);
                datePickerDialog.show();
            }
        if(v == rMale)
        {
            Toast.makeText(getApplicationContext(),"You have Selected Male",Toast.LENGTH_SHORT).show();
            gender = "Male";
            System.out.println("Male :- " + gender );

        }
        if (v == rFemale)
        {
            Toast.makeText(getApplicationContext(),"You have Selected Female",Toast.LENGTH_SHORT).show();
            gender = "Female";
            System.out.println("Female :- " + gender );
        }
    }

    private void registerUser()
    {

        final String firstname1 = firstname.getText().toString().trim();
        final String lastname1 = lastname.getText().toString().trim();
        final String address1 = address.getText().toString().trim();
        final String dob1 = Date.getText().toString().trim();
        final String gender1  = gender;
        final String mobile1 = mobile.getText().toString().trim();
        final String email1 = email.getText().toString().trim();
        final String username1 = username.getText().toString().trim();
        final String password1 = password.getText().toString().trim();

        System.out.println("firstname" +firstname1+ "lastname" +lastname1+ "address" +address1+ "dob" +dob1+ "gender" +gender1+ "mobile" +mobile1+ "email" +email1+ "username" +username1+ "password" +password1);


        class Register extends AsyncTask<Void, Void, String> {

            ProgressDialog loading;

            @Override
            protected void onPreExecute() {
                super.onPreExecute();
                loading = ProgressDialog.show(RegisterUser.this, "Adding...", "Wait...", false, false);
            }
            @Override
            protected void onPostExecute(String s)
            {
                super.onPostExecute(s);
                loading.dismiss();
                String response = s;
                System.out.println(response);
                try {
                    JSONObject parentObject = new JSONObject(response);
                    //And then read attributes like
                    String name = parentObject.getString("result");
                    System.out.println("Result :- " + name);

                    if (name.equals("Registered Successfully..."))
                    {
                        Toast.makeText(getApplicationContext(), name, Toast.LENGTH_LONG).show();
                        Intent i = new Intent(getApplicationContext(), LoginActivity.class);
                        startActivity(i);
                    }
                    else if(name.equals("Query Error Contact Devloper"))
                    {
                        error.setText("Query Error Contact Devloper");
                        Toast.makeText(getApplicationContext(), name, Toast.LENGTH_LONG).show();
                    }
                    else if(name.equals("Contact is exists"))
                    {
                        error.setText("Contact is exists");
                        Toast.makeText(getApplicationContext(), name, Toast.LENGTH_LONG).show();
                    }
                    else if(name.equals("Email is exists"))
                    {
                        error.setText("Email is exists");
                        //Toast.makeText(getApplicationContext(), name, Toast.LENGTH_LONG).show();
                    }
                    else if(name.equals("Username is exists"))
                    {
                        error.setText("Username is exists");
                        //Toast.makeText(getApplicationContext(), name, Toast.LENGTH_LONG).show();
                    }
                    else if(name.equals("User is exists"))
                    {
                        error.setText("User is exists");
                        //Toast.makeText(getApplicationContext(), name, Toast.LENGTH_LONG).show();
                    }
                    else if(name.equals("User name can not be admin"))
                    {
                        error.setText("User name can not be admin");
                        Toast.makeText(getApplicationContext(), name, Toast.LENGTH_LONG).show();
                    }
                    else
                    {
                        error.setText("Please Enter valid info");
                        Toast.makeText(getApplicationContext(), name, Toast.LENGTH_LONG).show();
                    }

                } catch (JSONException e)
                {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }

            @Override
            protected String doInBackground(Void... v)
            {

                HashMap<String, String> UserData = new HashMap<>();
                UserData.put(Config.KEY_USER_FIRSTNAME, firstname1);
                UserData.put(Config.KEY_USER_LASTNAME, lastname1);
                UserData.put(Config.KEY_ADDRESS, address1);
                UserData.put(Config.KEY_DOB, dob1);
                UserData.put(Config.KEY_GENDER, gender1);
                UserData.put(Config.KEY_MOBILE, mobile1);
                UserData.put(Config.KEY_EMAIL, email1);
                UserData.put(Config.KEY_USERNAME, username1);
                UserData.put(Config.KEY_PASSWORD, password1);


                System.out.println(UserData.keySet() + "\n" + UserData.values());
                HttpConnection register = new HttpConnection();
                System.out.println("before API call");

                String res = register.sendPostRequest(Config.URL_ADD_USER, UserData);
                System.out.println("after API call");
                return res;
            }
        }
            Register obj = new Register();
            obj.execute();
    }
}


